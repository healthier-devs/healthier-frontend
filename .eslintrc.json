// Eslintrc setting referring article below â†“
// https://javascript.plainenglish.io/setting-eslint-and-prettier-on-a-react-typescript-project-2021-22993565edf9
{
  "env": {
    "browser": true,
    "es2021": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:prettier/recommended",
    "plugin:@tanstack/eslint-plugin-query/recommended"
  ],
  "overrides": [],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": "latest",
    "sourceType": "module"
  },
  "plugins": ["react", "@typescript-eslint", "react-hooks", "import", "@tanstack/query"],
  "rules": {
    "react/jsx-filename-extension": [
      "warn",
      {
        "extensions": [".tsx"]
      }
    ],
    "no-shadow": "off",
    "@typescript-eslint/no-shadow": ["error"],
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn",
    "import/prefer-default-export": "off",
    "react/prop-types": "off",
    "react/react-in-jsx-scope": "off",
    "@typescript-eslint/no-namespace": "off",
    "@typescript-eslint/ban-ts-comment": "off",
    "react/no-unknown-property": ["off"],
    "semi": "error",
    "curly": "error",
    "eqeqeq": ["error", "smart"],
    "no-unused-vars": ["off"],
    "import/no-extraneous-dependencies": ["error"],
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "typeAlias",
        "format": ["PascalCase"],
        "prefix": ["T"]
      }
    ],
    "@typescript-eslint/adjacent-overload-signatures": "error",
    "import/order": [
      "warn",
      {
        "groups": ["builtin", "external", "internal", "parent", "sibling", "index", "object", "type"],
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        },
        "pathGroups": [
          {
            "pattern": "$*/**",
            "group": "internal",
            "position": "before"
          }
        ],

        "pathGroupsExcludedImportTypes": ["builtin"],
        "newlines-between": "never"
      }
    ],
    "no-console": "warn",
    "newline-before-return": "error",
    "newline-after-var": "error",
    "prefer-const": "error"
  }
}
